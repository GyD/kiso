{#
/**
 * @file
 * Kiso's theme override to display a pager.
 *
 * You will find same variables as in the core 'pager.html.twig' template.
 *
 * Related WCAG resources:
 * - SC 1.3.1 Info and Relationships (Level A):
 *   - H48: Using ol, ul and dl for lists or groups of links.
 *   - ARIA11: Using ARIA landmarks to identify regions of a page.
 * - SC 2.4.4 Link Purpose (In Context) (Level A):
 *   - C7: Providing a supplemental description of the purpose of a link using CSS
 *     to hide a portion of the link text.
 * - SC 4.1.2 Name, Role, Value (Level A):
 *   - ARIA14: Using aria-label to provide an invisible label where a visible
 *     label cannot be used.
 *
 * @see template_preprocess_pager()
 */
#}
{% if items %}
  <nav class="pager" aria-label="{{ 'Pagination'|t }}">
    <ul class="pager__items js-pager__items">
      {# Print first item if we are not on the first page. #}
      {% if items.first %}
        <li class="pager__item pager__item--first">
          <a href="{{ items.first.href }}" title="{{ 'Go to first page'|t }}"{{ items.first.attributes|without('href', 'title') }}>
            <span class="visually-hidden">{{ 'Go to first page'|t }}</span>
            <span aria-hidden="true">{{ items.first.text|default('First'|t) }}</span>
          </a>
        </li>
      {% endif %}
      {# Print previous item if we are not on the first page. #}
      {% if items.previous %}
        <li class="pager__item pager__item--previous">
          <a href="{{ items.previous.href }}" title="{{ 'Go to previous page'|t }}" rel="prev"{{ items.previous.attributes|without('href', 'title', 'rel') }}>
            <span class="visually-hidden">{{ 'Go to previous page'|t }}</span>
            <span aria-hidden="true">{{ items.previous.text|default('Previous'|t) }}</span>
          </a>
        </li>
      {% endif %}
      {# Add an ellipsis if there are further previous pages. #}
      {% if ellipses.previous %}
        <li class="pager__item pager__item--ellipsis" role="presentation">&hellip;</li>
      {% endif %}
      {# Now generate the actual pager piece. #}
      {% for key, item in items.pages %}
        <li class="pager__item{{ current == key ? ' is-active' : '' }}">
          {% if current == key %}
            {% set title = 'Current page'|t %}
          {% else %}
            {% set title = 'Go to page @key'|t({'@key': key}) %}
          {% endif %}
          <a href="{{ item.href }}" title="{{ title }}"{{ item.attributes|without('href', 'title') }}>
            <span class="visually-hidden">
              {{ current == key ? 'Current page'|t : 'Go to page'|t }}
            </span>
            {{- key -}}
          </a>
        </li>
      {% endfor %}
      {# Add an ellipsis if there are further next pages. #}
      {% if ellipses.next %}
        <li class="pager__item pager__item--ellipsis" role="presentation">&hellip;</li>
      {% endif %}
      {# Print next item if we are not on the last page. #}
      {% if items.next %}
        <li class="pager__item pager__item--next">
          <a href="{{ items.next.href }}" title="{{ 'Go to next page'|t }}" rel="next"{{ items.next.attributes|without('href', 'title', 'rel') }}>
            <span class="visually-hidden">{{ 'Go to next page'|t }}</span>
            <span aria-hidden="true">{{ items.next.text|default('Next'|t) }}</span>
          </a>
        </li>
      {% endif %}
      {# Print last item if we are not on the last page. #}
      {% if items.last %}
        <li class="pager__item pager__item--last">
          <a href="{{ items.last.href }}" title="{{ 'Go to last page'|t }}"{{ items.last.attributes|without('href', 'title') }}>
            <span class="visually-hidden">{{ 'Go to last page'|t }}</span>
            <span aria-hidden="true">{{ items.last.text|default('Last'|t) }}</span>
          </a>
        </li>
      {% endif %}
    </ul>
  </nav>
{% endif %}
